module.exports = {
  env: {
    browser: true,
    es2021: true,
    node: true,
  },
  extends: ['eslint:recommended', 'plugin:@typescript-eslint/recommended', 'prettier'],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 13,
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint', 'prettier', 'eslint-plugin-prettier'],
  rules: {
    '@typescript-eslint/adjacent-overload-signatures': 'error',
    '@typescript-eslint/array-type': [
      'error',
      {
        default: 'array',
        readonly: 'array',
      },
    ],
    '@typescript-eslint/ban-ts-comment': 'error',
    '@typescript-eslint/ban-types': 'error',
    '@typescript-eslint/brace-style': ['error'],
    '@typescript-eslint/consistent-type-assertions': 'error',
    '@typescript-eslint/keyword-spacing': ['error'],
    '@typescript-eslint/member-delimiter-style': 'error',
    '@typescript-eslint/no-array-constructor': 'error',
    '@typescript-eslint/no-empty-function': 'error',
    '@typescript-eslint/no-empty-interface': 'error',
    '@typescript-eslint/no-inferrable-types': 'error',
    '@typescript-eslint/no-magic-numbers': [
      'error',
      {
        ignore: [0, 1, -1, 2],
        ignoreEnums: true,
      },
    ],
    '@typescript-eslint/no-misused-new': 'error',
    '@typescript-eslint/no-namespace': 'error',
    '@typescript-eslint/no-shadow': 'error',
    '@typescript-eslint/no-this-alias': 'error',
    '@typescript-eslint/no-unused-vars': 'error',
    '@typescript-eslint/no-use-before-define': 'error',
    '@typescript-eslint/no-var-requires': 'error',
    '@typescript-eslint/prefer-namespace-keyword': 'error',
    '@typescript-eslint/triple-slash-reference': 'error',
    '@typescript-eslint/type-annotation-spacing': 'error',
    'arrow-body-style': ['error', 'as-needed'],
    'brace-style': 'off',
    'comma-dangle': ['error', 'always-multiline'],
    // 'import/default': 'error',
    // 'import/export': 'error',
    // 'import/extensions': [
    //   'error',
    //   'never',
    //   {
    //     js: 'never',
    //     svg: 'always',
    //     scss: 'always',
    //     png: 'always',
    //     css: 'always',
    //     json: 'always',
    //   },
    // ],
    // 'import/first': 'error',
    // /* 'import/namespace': 'error', */
    // 'import/no-absolute-path': 'error',
    // 'import/no-extraneous-dependencies': 'error',
    // 'import/no-mutable-exports': 'error',
    // 'import/no-named-as-default-member': 'error',
    // 'import/no-named-as-default': 'error',
    // 'import/no-named-default': 'error',
    // 'import/no-self-import': 'error',
    // 'import/no-unresolved': 'error',
    // 'import/no-webpack-loader-syntax': 'error',
    // 'import/order': [
    //   'error',
    //   {
    //     'newlines-between': 'always',
    //     groups: ['builtin', 'external', ['unknown', 'internal'], 'parent', 'sibling', 'index'],
    //   },
    // ],
    // 'import/prefer-default-export': 'off',
    'keyword-spacing': 'off',
    'linebreak-style': ['error', 'unix'],
    'max-len': [
      'error',
      {
        code: 100,
        ignoreTemplateLiterals: true,
        ignoreStrings: true,
        ignoreComments: true,
      },
    ],
    'no-array-constructor': 'off',
    'no-empty-function': 'off',
    'no-extra-parens': 'off',
    'no-magic-numbers': 'off',
    'no-mixed-operators': 'off',
    'no-shadow': 'off',
    'no-undef': 'off',
    'no-unused-expressions': 'off',
    'no-unused-vars': 'off',
    'no-use-before-define': 'off',
    'prettier/prettier': [
      'error',
      {
        printWidth: 100,
        singleQuote: true,
        trailingComma: 'all',
      },
    ],
    'spaced-comment': [
      'error',
      'always',
      {
        markers: ['/'],
      },
    ],
    indent: 'off',
    semi: ['error', 'always'],
  },
};
